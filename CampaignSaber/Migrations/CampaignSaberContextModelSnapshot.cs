// <auto-generated />
using System;
using CampaignSaber.Models;
using CampaignSaber.Models.Discord;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CampaignSaber.Migrations
{
    [DbContext(typeof(CampaignSaberContext))]
    partial class CampaignSaberContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CampaignSaber.Models.Campaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("CoverURL")
                        .HasColumnName("cover_url")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("DirectDownloadURL")
                        .IsRequired()
                        .HasColumnName("direct_download_url")
                        .HasColumnType("text");

                    b.Property<string>("DownloadURL")
                        .IsRequired()
                        .HasColumnName("download_url")
                        .HasColumnType("text");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnName("hash")
                        .HasColumnType("text");

                    b.Property<CampaignMetadata>("Metadata")
                        .IsRequired()
                        .HasColumnName("metadata")
                        .HasColumnType("jsonb");

                    b.Property<CampaignStats>("Stats")
                        .IsRequired()
                        .HasColumnName("stats")
                        .HasColumnType("jsonb");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("text");

                    b.Property<DateTime>("Uploaded")
                        .HasColumnName("uploaded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UploaderId")
                        .IsRequired()
                        .HasColumnName("uploader_id")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_campaigns");

                    b.HasIndex("UploaderId")
                        .HasName("ix_campaigns_uploader_id");

                    b.ToTable("campaigns");
                });

            modelBuilder.Entity("CampaignSaber.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("text");

                    b.Property<DiscordUser>("Profile")
                        .IsRequired()
                        .HasColumnName("profile")
                        .HasColumnType("jsonb");

                    b.Property<int>("Role")
                        .HasColumnName("role")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users");
                });

            modelBuilder.Entity("CampaignSaber.Models.Campaign", b =>
                {
                    b.HasOne("CampaignSaber.Models.User", "Uploader")
                        .WithMany()
                        .HasForeignKey("UploaderId")
                        .HasConstraintName("fk_campaigns_users_uploader_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
